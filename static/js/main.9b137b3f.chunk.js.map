{"version":3,"sources":["component/validateEmail.js","component/ApiGetPost.js","component/inputfeild.jsx","App.js","reportWebVitals.js","index.js"],"names":["validate","finalEmail","includes","length","indexOf","toast","configure","handlePost","finalName","finalInterest","a","axios","post","name","email","interests","accept","result","console","log","status","success","position","POSITION","TOP_CENTER","autoClose","setTimeout","window","location","reload","handleGet","temp","get","data","arr","i","obj","value","results","label","push","InputField","useState","interestOptions","setInterestOption","searchedKeys","setKeys","setInterest","emailError","setEmailError","setEmail","setName","useEffect","tempKeys","someFunc","className","onSubmit","event","preventDefault","validateEmail","error","type","id","onChange","e","target","required","htmlFor","isMulti","placeholder","options","onInputChange","Array","isArray","map","x","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b137b3f.chunk.js","sourcesContent":["const validate = (finalEmail) => {\r\n  let error = \"\";\r\n  if (finalEmail[0] == \"@\") {\r\n    error = \"Invalid E-mail\";\r\n  } else if (!finalEmail.includes(\"@\")) {\r\n    error = \"Missing '@' sign\";\r\n  } else if (\r\n    finalEmail[finalEmail.length - 1] === \"@\" ||\r\n    finalEmail.indexOf(\".\") - finalEmail.indexOf(\"@\") === 1\r\n  ) {\r\n    error = \"Add Domain in Email ( @abc.in )\";\r\n  } else if (\r\n    !finalEmail.includes(\".\") ||\r\n    finalEmail.indexOf(\".\") >= finalEmail.length - 2\r\n  ) {\r\n    error = \"Add Top level Domain(.com .in)\";\r\n  } else {\r\n    error = \"\";\r\n  }\r\n\r\n  return error;\r\n};\r\nexport default validate;\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure();\r\nconst handlePost = async (finalName, finalEmail, finalInterest) => {\r\n  let result = await axios.post(\r\n    \"https://testpostapi1.p.rapidapi.com/testBatmanApi/name/register?rapidapi-key=28728db04dmsh34d3f140dd059fap1c388ejsn7288577afcf7\",\r\n    {\r\n      name: finalName,\r\n      email: finalEmail,\r\n      interests: finalInterest,\r\n    },\r\n    {\r\n      accept: \"success\",\r\n      \"content-type\": \"application/x-www-form-urlencoded\",\r\n      \"x-rapidapi-host\": \"testpostapi1.p.rapidapi.com\",\r\n      \"x-rapidapi-key\": \"28728db04dmsh34d3f140dd059fap1c388ejsn7288577afcf7\",\r\n    }\r\n  );\r\n  console.log(result);\r\n  if (result.status)\r\n    toast.success(\"Data Posted\", {\r\n      position: toast.POSITION.TOP_CENTER,\r\n      autoClose: 3000,\r\n    });\r\n  setTimeout(() => {\r\n    window.location.reload();\r\n  }, 3000);\r\n};\r\n\r\nconst handleGet = async (temp) => {\r\n  const { data } = await axios.get(\r\n    `https://webit-keyword-search.p.rapidapi.com/autosuggest?q=${temp}&language=en&rapidapi-key=28728db04dmsh34d3f140dd059fap1c388ejsn7288577afcf7`\r\n  );\r\n  const arr = [];\r\n  for (var i = 0; i < 8; i++) {\r\n    const obj = {\r\n      value: data.data.results[i],\r\n      label: data.data.results[i],\r\n    };\r\n    arr.push(obj);\r\n  }\r\n  return arr;\r\n};\r\n\r\nexport { handlePost };\r\nexport { handleGet };\r\n","import { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport React from \"react\";\r\nimport Select from \"react-select\";\r\nimport validateEmail from \"./validateEmail\";\r\nimport { handlePost, handleGet } from \"./ApiGetPost\";\r\n\r\ntoast.configure();\r\n\r\nconst InputField = () => {\r\n  let [interestOptions, setInterestOption] = useState([]);\r\n  let [searchedKeys, setKeys] = useState(\"sport\");\r\n  let [finalInterest, setInterest] = useState([]);\r\n  let [emailError, setEmailError] = useState(\"\");\r\n  let [finalEmail, setEmail] = useState(\"\");\r\n  let [finalName, setName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const someFunc = async () => {\r\n      let tempKeys = searchedKeys;\r\n      if (tempKeys === \"\") {\r\n        setKeys(\"sport\");\r\n        tempKeys = \"sport\";\r\n      }\r\n      //handleGet is imported from ApiGetPost.js\r\n      const arr = await handleGet(tempKeys); //Getting Data{object} from API\r\n      //console.log(arr);\r\n      setInterestOption(arr);\r\n    };\r\n    someFunc();\r\n  }, [searchedKeys]);\r\n\r\n  const setSearchKeys = (event) => {\r\n    setKeys(event);\r\n  };\r\n\r\n  const settingInterest = (e) => {\r\n    setInterest(Array.isArray(e) ? e.map((x) => x.label) : []);\r\n  };\r\n\r\n  const validation = (event) => {\r\n    event.preventDefault();\r\n    let emailError = validateEmail(finalEmail);\r\n    setEmailError(emailError);\r\n    if (\r\n      emailError === \"\" &&\r\n      finalName !== \"\" &&\r\n      finalInterest.length <= 3 &&\r\n      finalInterest.length > 0\r\n    ) {\r\n      // handlePost is imported from ApiGetPost.js\r\n      handlePost(finalName, finalEmail, finalInterest);\r\n    } else {\r\n      if (!emailError) {\r\n        //when email has no error then Interest must validate\r\n        if (finalInterest.length > 3)\r\n          //Toast Comp. Imported from react-toastify\r\n          toast.error(\"User Can Select Max. 3 Interests\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n        if (finalInterest.length == 0)\r\n          toast.error(\"Please Select Atleast One Interest\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"mainDiv\" onSubmit={validation}>\r\n      <div className=\"my-3\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          className=\"form-control\"\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n        <label htmlFor=\"username\">Username</label>\r\n      </div>\r\n      <div className=\"my-3\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"email\"\r\n          className=\"form-control\"\r\n          required\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <label htmlFor=\"email\">Email</label>\r\n        <span className=\"emailerror\">{emailError}</span>\r\n      </div>\r\n      <div className=\"my-3\">\r\n        {/* This is AutoComplete Interest Select/Search Component */}\r\n        <Select\r\n          isMulti\r\n          name=\"interest\"\r\n          placeholder={\"Search Interest\"}\r\n          options={interestOptions}\r\n          className=\"basic-multi-select\"\r\n          onInputChange={setSearchKeys}\r\n          onChange={settingInterest}\r\n        />\r\n      </div>\r\n\r\n      <button className=\"btn btn-success submitBtn\">Register</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","import \"./App.css\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport InputField from \"./component/inputfeild\";\n\nfunction App() {\n  return <InputField />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}