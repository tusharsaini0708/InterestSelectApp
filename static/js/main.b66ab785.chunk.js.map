{"version":3,"sources":["component/validateEmail.js","component/ApiGetPost.js","component/inputfeild.jsx","App.js","reportWebVitals.js","index.js"],"names":["validate","finalEmail","length","includes","isNaN","indexOf","handlePost","finalName","finalInterest","a","axios","post","name","email","interests","accept","result","console","log","status","alert","window","location","reload","handleGet","temp","get","data","arr","i","obj","value","results","label","push","InputField","useState","interestOptions","setInterestOption","searchedKeys","setKeys","setInterest","emailError","setEmailError","setEmail","setName","useEffect","tempKeys","someFunc","className","type","onChange","e","target","required","isMulti","placeholder","options","onInputChange","event","Array","isArray","map","x","onClick","error","validateEmail","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b66ab785.chunk.js","sourcesContent":["const validate = (finalEmail) => {\r\n  let error = \"\";\r\n  if (finalEmail[0] == \"@\" || finalEmail.length < 9) {\r\n    error = \"Invalid E-mail length must be more then 9\";\r\n  } else if (!finalEmail.includes(\"@\")) {\r\n    error = \"Missing @\";\r\n  } else if (isNaN(finalEmail[finalEmail.indexOf(\"@\") - 1] * 1)) {\r\n    error = \"Must be a number before @\";\r\n  } else if (\r\n    finalEmail[finalEmail.length - 4] != \".\" &&\r\n    finalEmail[finalEmail.length - 3] != \".\"\r\n  ) {\r\n    error = \"Position of . is not correct\";\r\n  } else {\r\n    error = \"\";\r\n  }\r\n\r\n  return error;\r\n};\r\nexport default validate;\r\n","import axios from \"axios\";\r\n\r\nconst handlePost = async (finalName, finalEmail, finalInterest) => {\r\n  let result = await axios.post(\r\n    \"https://testpostapi1.p.rapidapi.com/testBatmanApi/name/register?rapidapi-key=28728db04dmsh34d3f140dd059fap1c388ejsn7288577afcf7\",\r\n    {\r\n      name: finalName,\r\n      email: finalEmail,\r\n      interests: finalInterest,\r\n    },\r\n    {\r\n      accept: \"success\",\r\n      \"content-type\": \"application/x-www-form-urlencoded\",\r\n      \"x-rapidapi-host\": \"testpostapi1.p.rapidapi.com\",\r\n      \"x-rapidapi-key\": \"28728db04dmsh34d3f140dd059fap1c388ejsn7288577afcf7\",\r\n    }\r\n  );\r\n  console.log(result);\r\n  if (result.status) alert(\"Data Posted Successfully\");\r\n  window.location.reload();\r\n};\r\n\r\nconst handleGet = async (temp) => {\r\n  const { data } = await axios.get(\r\n    `https://webit-keyword-search.p.rapidapi.com/autosuggest?q=${temp}&language=en&rapidapi-key=28728db04dmsh34d3f140dd059fap1c388ejsn7288577afcf7`\r\n  );\r\n  const arr = [];\r\n  for (var i = 0; i < 8; i++) {\r\n    const obj = {\r\n      value: data.data.results[i],\r\n      label: data.data.results[i],\r\n    };\r\n    arr.push(obj);\r\n  }\r\n  return arr;\r\n};\r\n\r\nexport { handlePost };\r\nexport { handleGet };\r\n","import { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\nimport Select from \"react-select\";\r\nimport validateEmail from \"./validateEmail\";\r\nimport { handlePost, handleGet } from \"./ApiGetPost\";\r\n\r\nconst InputField = () => {\r\n  let [interestOptions, setInterestOption] = useState([]);\r\n  let [searchedKeys, setKeys] = useState(\"paint\");\r\n  let [finalInterest, setInterest] = useState([]);\r\n  let [emailError, setEmailError] = useState(\"\");\r\n  let [finalEmail, setEmail] = useState(\"\");\r\n  let [finalName, setName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const someFunc = async () => {\r\n      let tempKeys = searchedKeys;\r\n      if (tempKeys === \"\") {\r\n        setKeys(\"paint\");\r\n        tempKeys = \"paint\";\r\n      }\r\n      //handleGet is imported from ApiGetPost.js\r\n      const arr = await handleGet(tempKeys); //Getting Data{object} from API\r\n      //console.log(arr);\r\n      setInterestOption(arr);\r\n    };\r\n    someFunc();\r\n  }, [searchedKeys]);\r\n\r\n  const setSearchKeys = (event) => {\r\n    setKeys(event);\r\n  };\r\n\r\n  const settingInterest = (e) => {\r\n    setInterest(Array.isArray(e) ? e.map((x) => x.label) : []);\r\n  };\r\n\r\n  const validation = () => {\r\n    let error = validateEmail(finalEmail);\r\n    setEmailError(error);\r\n    if (error === \"\" && finalName !== \"\" && finalInterest.length === 3) {\r\n      // handlePost is imported from ApiGetPost.js\r\n      handlePost(finalName, finalEmail, finalInterest);\r\n    } else {\r\n      if (finalName === \"\") alert(\"Username Can't be empty\");\r\n      else if (finalInterest.length !== 3) alert(\"Must be 3 Interest Selected\");\r\n      else {\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"mainDiv\">\r\n      <div className=\"inputdiv\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n        <label>Username</label>\r\n      </div>\r\n      <div className=\"inputdiv\">\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          required\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <label>Email</label>\r\n        <span className=\"emailerror\">{emailError}</span>\r\n      </div>\r\n      <div className=\"inputdiv\">\r\n        {/* This is AutoComplete Interest Select/Search Component */}\r\n        <Select\r\n          isMulti\r\n          name=\"interest\"\r\n          placeholder={\"Search Interest\"}\r\n          options={interestOptions}\r\n          className=\"basic-multi-select\"\r\n          onInputChange={setSearchKeys}\r\n          onChange={settingInterest}\r\n        />\r\n      </div>\r\n\r\n      <button className=\"btndiv\" type=\"button\" onClick={validation}>\r\n        Register\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","import \"./App.css\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport InputField from \"./component/inputfeild\";\n\nfunction App() {\n  return <InputField />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}